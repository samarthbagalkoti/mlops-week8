services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped

  airflow-init:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    image: airflow-mlops:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    env_file:
      - .env
    user: "0:0"
    entrypoint: /bin/bash
    command: >
      -c "
      airflow db upgrade &&
      airflow users create
        --role Admin
        --username admin
        --password admin
        --firstname Admin
        --lastname User
        --email admin@example.com || true
      "

  airflow-webserver:
    image: airflow-mlops:latest
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: /opt/airflow:/opt/airflow/src
    env_file:
      - .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - airflow_logs:/opt/airflow/logs     # <-- named volume (no host perms issue)
      - ./artifacts:/opt/airflow/artifacts
    ports:
      - "0.0.0.0:8080:8080"
    command: webserver
    restart: unless-stopped

  airflow-scheduler:
    image: airflow-mlops:latest
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: /opt/airflow:/opt/airflow/src
    env_file:
      - .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - airflow_logs:/opt/airflow/logs     # <-- same named volume
      - ./artifacts:/opt/airflow/artifacts
    command: scheduler
    restart: unless-stopped

volumes:
  pg_data:
  airflow_logs:    # <-- declare the named volume here

